use role accountadmin;

// SET VARIABLES
set var_provider = 's3';
set var_role_arn = '';
set var_allowed_locations = '';

// CREATE WAREHOUSE
create warehouse if not exists snowpipe_wh
with warehouse_size = medium
    max_cluster_count = 1
    min_cluster_count = 1
    auto_suspend = 60
    initially_suspended = false;

// CREATE DATABASE
create database if not exists snowpipe_db;

// SET SCHEMA CONTEXT
set var_schema = 'snowpipe_db.'||$var_provider;

create schema if not exists identifier($var_schema);

use schema identifier($var_schema);

// CREATE TABLE
set var_table = $var_schema||'.raw_table';

create table if not exists identifier($var_table)(
    row_number          number
    ,file_name           string
    ,timestamp_created   timestamp
    ,raw_data            variant);

// CREATE STORAGE INTEGATION
set var_integration = $var_provider||'_int';

create storage integration if not exists identifier($var_integration)
    type = external_stage
    storage_provider = $var_provider
    enabled = true
    storage_aws_role_arn = $var_role_arn
    storage_allowed_locations = $var_allowed_locations;
      
// CREATE STAGE
set var_stage = $var_schema||'.raw_stage';

create stage if not exists identifier($var_stage)
    url = $var_allowed_locations
    storage_integration = $var_integration;

// CREATE FILE FORMAT
set var_file_format = $var_schema||'.json_format';

create file format if not exists identifier($var_file_format)
    type = json;

// CREATE PIPE
set var_pipe = $var_schema||'.snowpipe_'||$var_provider||'_pipe';

create pipe if not exists identifier($var_pipe)
auto_ingest = true as
    copy into identifier($var_table)(row_number,file_name,timestamp_created,raw_data)
    from( select metadata$file_row_number,metadata$filename,current_timestamp(),$1
        from @raw_stage )
file_format = $var_file_format;

alter warehouse snowpipe_wh suspend;
