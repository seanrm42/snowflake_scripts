use role accountadmin;

-- set name of demo
set var_role = '<ROLE_NAME>';
set var_schema = '<SCHEMA_NAME>';

grant role identifier( $var_role ) to role accountadmin;
grant all privileges on database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on all tables in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on all views in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on all materialized views in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future tables in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future views in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future materialized views in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future sequences in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future procedures in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future functions in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future stages in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future pipes in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future streams in database identifier( $var_schema ) to role identifier( $var_role );
grant all privileges on future tasks in database identifier( $var_schema ) to role identifier( $var_role );
